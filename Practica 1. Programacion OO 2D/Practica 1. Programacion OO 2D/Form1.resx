<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PbxCalculaDistancia.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5Tum5HPyf3PYk/NjDEZyAAAAAElFTkSuQmCC
</value>
  </data>
</root>